{"apiVersion":"apps/v1","data":{"spec":{"template":{"$patch":"replace","metadata":{"creationTimestamp":null,"labels":{"app":"es-svc-data","logging.opstreelabs.in":"true","logging.opstreelabs.in/kind":"Elasticsearch","role":"data"}},"spec":{"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["elasticsearch-cluster-data"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"env":[{"name":"ES_JAVA_OPTS","value":"-Xmx1g -Xms1g"},{"name":"SCHEME","value":"http"},{"name":"cluster.name","value":"dev"},{"name":"discovery.seed_hosts","value":"es-svc-master-headless"},{"name":"network.host","value":"0.0.0.0"},{"name":"node.data","value":"true"},{"name":"node.ingest","value":"false"},{"name":"node.master","value":"false"},{"name":"node.name","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}}],"image":"docker.elastic.co/elasticsearch/elasticsearch:7.9.1","imagePullPolicy":"IfNotPresent","name":"elastic","readinessProbe":{"exec":{"command":["sh","-c","#!/usr/bin/env bash -e\nSTART_FILE=/tmp/.es_start_file\n\nhttp () {\n  local path=\"${1}\"\n  local args=\"${2}\"\n  set -- -XGET -s\n\n  if [ \"$args\" != \"\" ]; then\n    set -- \"$@\" $args\n  fi\n\n  if [ -n \"${ELASTIC_USERNAME}\" ] \u0026\u0026 [ -n \"${ELASTIC_PASSWORD}\" ]; then\n    set -- \"$@\" -u \"${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}\"\n  fi\n\n  curl --output /dev/null -k \"$@\" \"${SCHEME}://127.0.0.1:9200${path}\"\n}\n\nif [ -f \"${START_FILE}\" ]; then\n  echo 'Elasticsearch is already running, lets check the node is healthy'\n  HTTP_CODE=$(http \"/\" \"-w %{http_code}\")\n  RC=$?\n  if [[ ${RC} -ne 0 ]]; then\n    echo \"curl --output /dev/null -k -XGET -s -w '%{http_code}' \\${BASIC_AUTH} ${SCHEME}://127.0.0.1:9200/ failed with RC ${RC}\"\n    exit ${RC}\n  fi\n  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x\n  if [[ ${HTTP_CODE} == \"200\" ]]; then\n    exit 0\n  elif [[ ${HTTP_CODE} == \"503\" \u0026\u0026 \"7\" == \"6\" ]]; then\n    exit 0\n  else\n    echo \"curl --output /dev/null -k -XGET -s -w '%{http_code}' \\${BASIC_AUTH} ${SCHEME}://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}\"\n    exit 1\n  fi\n\nelse\n  echo 'Waiting for elasticsearch cluster to become ready (request params: \"wait_for_status=green\u0026timeout=1s\" )'\n  if http \"/_cluster/health?wait_for_status=green\u0026timeout=1s\" \"--fail\" ; then\n    touch ${START_FILE}\n    exit 0\n  else\n    echo 'Cluster is not yet ready (request params: \"wait_for_status=green\u0026timeout=1s\" )'\n    exit 1\n  fi\nfi\n"]},"failureThreshold":3,"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"500m","memory":"2Gi"},"requests":{"cpu":"500m","memory":"2Gi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/usr/share/elasticsearch/data","name":"es-svc-data"},{"mountPath":"/usr/share/elasticsearch/plugins","name":"plugin-volume"}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"initContainers":[{"command":["sysctl","-w","vm.max_map_count=262144"],"image":"docker.elastic.co/elasticsearch/elasticsearch:7.9.1","imagePullPolicy":"IfNotPresent","name":"sysctl-init","resources":{},"securityContext":{"privileged":true,"runAsUser":0},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"},{"command":["sh","-c","bin/elasticsearch-plugin install --batch repository-s3"],"image":"docker.elastic.co/elasticsearch/elasticsearch:7.9.1","imagePullPolicy":"IfNotPresent","name":"plugins-install","resources":{},"securityContext":{"privileged":true,"runAsUser":0},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/usr/share/elasticsearch/plugins","name":"plugin-volume"}]}],"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":30,"volumes":[{"emptyDir":{},"name":"plugin-volume"}]}}}},"kind":"ControllerRevision","metadata":{"annotations":{"logging.opstreelabs.in":"true","logging.opstreelabs.in/kind":"Elasticsearch"},"creationTimestamp":"2021-12-19T10:16:10Z","labels":{"app":"es-svc-data","controller.kubernetes.io/hash":"869d9dbb56","logging.opstreelabs.in":"true","logging.opstreelabs.in/kind":"Elasticsearch","role":"data"},"name":"es-svc-data-869d9dbb56","namespace":"staging","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"StatefulSet","name":"es-svc-data","uid":"6477bc54-78be-45e7-b521-d7077ef43b12"}],"resourceVersion":"236676005","selfLink":"/apis/apps/v1/namespaces/staging/controllerrevisions/es-svc-data-869d9dbb56","uid":"2cc3b95d-f31c-4871-a203-c2bd409dd14c"},"revision":2}